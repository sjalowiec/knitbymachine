---
import BaseLayout from "../../layouts/BaseLayout.astro";
---

<BaseLayout 
  title="Gauge Calculator | Knit by Machine" 
  description="Accurate gauge means accurate fit. Measure your swatch, enter the numbers, and instantly get your stitch and row gauge in inches or centimeters.">

<style>
.wizard-page {
  padding-top: 120px;
  padding-bottom: 3rem;
  min-height: 100vh;
  background: var(--page-bg);
}

.page-header {
  text-align: center;
  max-width: 800px;
  margin: 0 auto 2rem;
  padding: 0 1rem;
}

.page-header h1 {
  color: var(--kbm-green);
  font-size: 2rem;
  font-weight: 700;
  margin-bottom: 0.75rem;
}

.page-header p {
  color: #6b7280;
  font-size: 1.05rem;
  line-height: 1.6;
}

.video-button {
  display: inline-flex;
  align-items: center;
  gap: 0.5rem;
  padding: 0.75rem 1.5rem;
  background: var(--kbm-green);
  color: white;
  text-decoration: none;
  font-weight: 600;
  border-radius: 8px;
  margin: 1.5rem 0;
  transition: all 0.2s;
  border: none;
  cursor: pointer;
  font-size: 1rem;
}

.video-button:hover {
  background: #6E8B3D;
  transform: translateY(-2px);
  box-shadow: 0 4px 12px rgba(82, 104, 45, 0.3);
}

.wizard-container {
  max-width: 700px;
  margin: 0 auto;
  background: white;
  padding: 2rem;
  border-radius: 12px;
  box-shadow: 0 2px 8px rgba(0,0,0,0.08);
}

.units-toggle {
  display: flex;
  gap: 0.5rem;
  justify-content: center;
  margin-bottom: 2rem;
  padding: 4px;
  background: #f3f4f6;
  border-radius: 8px;
  width: fit-content;
  margin-left: auto;
  margin-right: auto;
}

.unit-btn {
  padding: 0.5rem 1.5rem;
  border: none;
  background: transparent;
  color: #6b7280;
  font-weight: 600;
  border-radius: 6px;
  cursor: pointer;
  transition: all 0.2s;
  font-size: 0.95rem;
}

.unit-btn.active {
  background: var(--kbm-green);
  color: white;
}

.input-group {
  margin-bottom: 1.5rem;
}

.input-group label {
  display: block;
  font-weight: 600;
  margin-bottom: 0.5rem;
  color: #374151;
  font-size: 0.95rem;
}

.input-group input {
  width: 100%;
  padding: 0.75rem;
  border: 2px solid #e5e7eb;
  border-radius: 8px;
  font-size: 1rem;
  transition: border-color 0.2s;
}

.input-group input:focus {
  outline: none;
  border-color: var(--kbm-green);
}

.input-group input::placeholder {
  color: #9ca3af;
  font-size: 0.9rem;
}

.input-grid {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 1rem;
}

.results-section {
  margin-top: 2rem;
  padding: 1.5rem;
  background: rgba(82, 104, 45, 0.05);
  border-radius: 8px;
  border-left: 4px solid var(--kbm-green);
}

.results-section h3 {
  color: var(--kbm-green);
  font-size: 1.25rem;
  margin-bottom: 1rem;
  font-weight: 700;
}

.gauge-result {
  background: white;
  padding: 1rem;
  border-radius: 6px;
  margin-bottom: 0.75rem;
}

.gauge-result:last-child {
  margin-bottom: 0;
}

.gauge-label {
  font-size: 0.85rem;
  color: #6b7280;
  margin-bottom: 0.25rem;
}

.gauge-value {
  font-size: 1.5rem;
  font-weight: 700;
  color: var(--kbm-green);
}

.gauge-value-sub {
  font-size: 0.9rem;
  color: #6b7280;
  margin-top: 0.25rem;
}

.tips-section {
  margin-top: 2rem;
  background: white;
  border-radius: 8px;
  overflow: hidden;
  border: 1px solid #e5e7eb;
}

.tips-header {
  width: 100%;
  padding: 1rem 1.25rem;
  background: transparent;
  border: none;
  display: flex;
  align-items: center;
  justify-content: space-between;
  cursor: pointer;
  transition: background-color 0.2s;
}

.tips-header:hover {
  background: #f9fafb;
}

.tips-header h4 {
  color: var(--kbm-green);
  font-size: 1.1rem;
  font-weight: 700;
  margin: 0;
}

.tips-content {
  max-height: 0;
  overflow: hidden;
  transition: max-height 0.3s ease;
}

.tips-content.open {
  max-height: 500px;
}

.tips-content ul {
  padding: 0 1.25rem 1.25rem 2.5rem;
  color: #6b7280;
  line-height: 1.8;
}

.tips-content li {
  margin-bottom: 0.5rem;
}

.chevron {
  transition: transform 0.3s ease;
  color: var(--kbm-green);
}

.chevron.rotated {
  transform: rotate(180deg);
}

@media (max-width: 640px) {
  .input-grid {
    grid-template-columns: 1fr;
  }
}
</style>

<div class="wizard-page">
  <div class="page-header">
    <h1>Gauge Calculator</h1>
    <p>
      Accurate gauge means accurate fit. Measure your swatch, enter the numbers, and instantly get your stitch and row gauge in inches or centimeters.
    </p>
    <button class="video-button" onclick="alert('Video tutorial coming soon!')">
      <i class="fas fa-play-circle"></i>
      Watch Video Tutorial
    </button>
  </div>

  <div class="wizard-container">
    <!-- Units Toggle -->
    <div class="units-toggle">
      <button class="unit-btn active" id="btn-inches" data-unit="inches">
        Inches
      </button>
      <button class="unit-btn" id="btn-cm" data-unit="cm">
        Centimeters
      </button>
    </div>

    <!-- Input Fields -->
    <div class="input-grid">
      <div class="input-group">
        <label for="swatch-width">Swatch Width</label>
        <input 
          type="number" 
          id="swatch-width" 
          step="0.1" 
          placeholder="e.g., 4"
        />
      </div>
      <div class="input-group">
        <label for="swatch-height">Swatch Height</label>
        <input 
          type="number" 
          id="swatch-height" 
          step="0.1" 
          placeholder="e.g., 4"
        />
      </div>
    </div>

    <div class="input-grid">
      <div class="input-group">
        <label for="stitches">Number of Stitches</label>
        <input 
          type="number" 
          id="stitches" 
          step="1" 
          placeholder="Count across your swatch"
        />
      </div>
      <div class="input-group">
        <label for="rows">Number of Rows</label>
        <input 
          type="number" 
          id="rows" 
          step="1" 
          placeholder="Count down your swatch"
        />
      </div>
    </div>

    <!-- Results Section -->
    <div id="results" class="results-section" style="display: none;">
      <h3>Your Gauge</h3>
      
      <div class="gauge-result">
        <div class="gauge-label">Stitch Gauge</div>
        <div class="gauge-value" id="stitch-gauge">--</div>
        <div class="gauge-value-sub" id="stitch-per-unit">--</div>
      </div>

      <div class="gauge-result">
        <div class="gauge-label">Row Gauge</div>
        <div class="gauge-value" id="row-gauge">--</div>
        <div class="gauge-value-sub" id="row-per-unit">--</div>
      </div>
    </div>

    <!-- Tips Section -->
    <div class="tips-section">
      <button class="tips-header" id="tips-toggle">
        <h4>Tips for Accurate Measurements</h4>
        <svg class="chevron" id="tips-chevron" width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M5 7.5L10 12.5L15 7.5" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
      </button>
      <div class="tips-content" id="tips-content">
        <ul>
          <li>Always measure your swatch after resting and blocking.</li>
          <li>Use a ruler with clear markings for accurate measurements.</li>
          <li>Measure multiple sections of the swatch and average the results for better accuracy.</li>
          <li>Count stitches and rows in the center of your swatch, away from the edges.</li>
        </ul>
      </div>
    </div>
  </div>
</div>

<script>
  // State management with localStorage
  let units = localStorage.getItem('gauge.unit') || 'inches';
  let swatchWidth = localStorage.getItem('gauge.width') || '';
  let swatchHeight = localStorage.getItem('gauge.height') || '';
  let stitches = localStorage.getItem('gauge.sts') || '';
  let rows = localStorage.getItem('gauge.rows') || '';

  // DOM elements
  const btnInches = document.getElementById('btn-inches');
  const btnCm = document.getElementById('btn-cm');
  const inputWidth = document.getElementById('swatch-width');
  const inputHeight = document.getElementById('swatch-height');
  const inputStitches = document.getElementById('stitches');
  const inputRows = document.getElementById('rows');
  const resultsSection = document.getElementById('results');
  const stitchGaugeEl = document.getElementById('stitch-gauge');
  const stitchPerUnitEl = document.getElementById('stitch-per-unit');
  const rowGaugeEl = document.getElementById('row-gauge');
  const rowPerUnitEl = document.getElementById('row-per-unit');
  const tipsToggle = document.getElementById('tips-toggle');
  const tipsContent = document.getElementById('tips-content');
  const tipsChevron = document.getElementById('tips-chevron');

  // Initialize inputs from localStorage
  inputWidth.value = swatchWidth;
  inputHeight.value = swatchHeight;
  inputStitches.value = stitches;
  inputRows.value = rows;

  // Update units UI
  function updateUnitsUI() {
    if (units === 'inches') {
      btnInches.classList.add('active');
      btnCm.classList.remove('active');
    } else {
      btnCm.classList.add('active');
      btnInches.classList.remove('active');
    }
  }

  updateUnitsUI();

  // Unit toggle handlers
  btnInches.addEventListener('click', () => {
    units = 'inches';
    localStorage.setItem('gauge.unit', units);
    updateUnitsUI();
    calculateGauge();
  });

  btnCm.addEventListener('click', () => {
    units = 'cm';
    localStorage.setItem('gauge.unit', units);
    updateUnitsUI();
    calculateGauge();
  });

  // Input handlers
  inputWidth.addEventListener('input', (e) => {
    swatchWidth = e.target.value;
    localStorage.setItem('gauge.width', swatchWidth);
    calculateGauge();
  });

  inputHeight.addEventListener('input', (e) => {
    swatchHeight = e.target.value;
    localStorage.setItem('gauge.height', swatchHeight);
    calculateGauge();
  });

  inputStitches.addEventListener('input', (e) => {
    stitches = e.target.value;
    localStorage.setItem('gauge.sts', stitches);
    calculateGauge();
  });

  inputRows.addEventListener('input', (e) => {
    rows = e.target.value;
    localStorage.setItem('gauge.rows', rows);
    calculateGauge();
  });

  // Tips toggle
  tipsToggle.addEventListener('click', () => {
    tipsContent.classList.toggle('open');
    tipsChevron.classList.toggle('rotated');
  });

  // Calculate gauge
  function calculateGauge() {
    const width = parseFloat(swatchWidth) || 0;
    const height = parseFloat(swatchHeight) || 0;
    const sts = parseFloat(stitches) || 0;
    const rowCount = parseFloat(rows) || 0;

    if (width > 0 && height > 0 && sts > 0 && rowCount > 0) {
      let stitchesPerInch, rowsPerInch, stitchesPer4or10, rowsPer4or10, displayLabel;

      if (units === 'inches') {
        stitchesPerInch = sts / width;
        rowsPerInch = rowCount / height;
        stitchesPer4or10 = stitchesPerInch * 4;
        rowsPer4or10 = rowsPerInch * 4;
        displayLabel = '4"';
      } else {
        // Centimeters - calculate per 10cm and convert to per inch
        const stitchesPer10cm = (sts / width) * 10;
        const rowsPer10cm = (rowCount / height) * 10;
        stitchesPer4or10 = stitchesPer10cm;
        rowsPer4or10 = rowsPer10cm;
        // Convert from per-10cm to per-inch
        stitchesPerInch = stitchesPer10cm / 3.937007874;
        rowsPerInch = rowsPer10cm / 3.937007874;
        displayLabel = '10 cm';
      }

      // Display results
      stitchGaugeEl.textContent = `${stitchesPerInch.toFixed(1)} sts/inch`;
      stitchPerUnitEl.textContent = `${stitchesPer4or10.toFixed(1)} stitches per ${displayLabel}`;
      rowGaugeEl.textContent = `${rowsPerInch.toFixed(1)} rows/inch`;
      rowPerUnitEl.textContent = `${rowsPer4or10.toFixed(1)} rows per ${displayLabel}`;
      
      resultsSection.style.display = 'block';
    } else {
      resultsSection.style.display = 'none';
    }
  }

  // Initial calculation
  calculateGauge();
</script>

</BaseLayout>
